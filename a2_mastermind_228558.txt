/**
 * Asignación 2 - Mastermind 
 * Nombre: Adán Cornejo
 * Id: 00000228558
 **/

data class Evaluacion(val posicionExacta: Int, val posicionIncorrecta: Int)

fun main(args: Array<String>) {
   println(evaluar("ABCD", "ABCD") == Evaluacion(4, 0))
   println(evaluar("ABCD", "CDBA") == Evaluacion(0, 4))
   println(evaluar("ABCD", "ABDC") == Evaluacion(2, 2))
   println(evaluar("AABC", "ADFE") == Evaluacion(1, 0))
   println(evaluar("AABC", "DEAA") == Evaluacion(0, 2))
}

fun evaluar(secret: String, guess: String): Evaluacion {
    var posicionExacta = 0
    var posicionIncorrecta = 0
    
    // Escribir tu código aquí
    
    require(secret.length == guess.length) { "secret y guess deben tener la misma longitud" }
    val pendientesSecret = mutableMapOf<Char, Int>() // Conteo de carácteres con coincidencias no exactas
    val indicesNoExactos = ArrayList<Int>(secret.length) // Marca los índices donde se encontraron las coincidencias no exactas
    
    for (i in secret.indices) {
		val s = secret[i]
		val g = guess[i]
		if (s == g) {
			posicionExacta++
		} else {
			pendientesSecret[s] = (pendientesSecret[s] ?: 0) + 1
			indicesNoExactos += i
		}
}
    
	for (i in indicesNoExactos) {
		val g = guess[i]
		val disponibles = pendientesSecret[g] ?: 0
		if (disponibles > 0) {
			posicionIncorrecta++
		if (disponibles == 1) pendientesSecret.remove(g) else pendientesSecret[g] = disponibles - 1
		}
}
    
    return Evaluacion(posicionExacta, posicionIncorrecta)
}